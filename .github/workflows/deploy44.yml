name: Build & Deploy Java App to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'  # Change if needed

    - name: Build with Maven
      run: mvn clean package

    - name: Package EB artifact
      run: |
          mkdir bundle
          cp target/*.jar bundle/            # copy your built jar
          cd bundle
          zip -r ../app.zip .                     # zip the JAR as top‚Äêlevel file



    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        application_name: java_app
        environment_name: java
          
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        application_name: my-eb-app
        nvironment_name: my-eb-env
        version_label: v${{ github.run_number }}
        region: us-east-1
        bucket_name: your-eb-bucket
        bucket_key: app-${{ github.run_number }}.zip

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        application_name: java_app
        environment_name: java
       

    - name: Upload zip to S3
      run: |
        aws s3 cp app.zip s3://${{ secrets.EB_S3_BUCKET }}/java_app${{ github.run_number }}.zip


    - name: Install AWS EB CLI
      run: |
          pip install --upgrade pip
          pip install awsebcli

    - name: Create new Elastic Beanstalk app version
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name ${{ secrets.EB_APP_NAME }} \
          --version-label v-${{ github.run_number }} \
          --source-bundle S3Bucket=${{ secrets.EB_S3_BUCKET }},S3Key=java_app${{ github.run_number }}.zip

    - name: Initialize EB CLI and deploy
      run: |
          eb init java-app --platform "64bit Amazon Linux 2023 v4.5.2 running Corretto 21" --region us-east-1

    - name: Delete EB environment if it exists
      run: |
       ENV_NAME="java"
       APP_NAME="java-app"
       REGION="us-east-1"

       echo "Checking if environment '$ENV_NAME' exists..."
       ENV_EXISTS=$(aws elasticbeanstalk describe-environments \
       --application-name "$APP_NAME" \
       --environment-names "$ENV_NAME" \
       --region "$REGION" \
       --query "Environments[?Status!='Terminated'].EnvironmentName" \
       --output text)

       if [[ "$ENV_EXISTS" == "$ENV_NAME" ]]; then
       echo "Environment exists. Terminating..."
       aws elasticbeanstalk terminate-environment \
        --environment-name "$ENV_NAME" \
        --region "$REGION" \
        --no-wait
       else
       echo "Environment does not exist or is already terminated."
       fi


          
          
          eb create java \
            --single \
            --instance_type t3.small \
            --cname your-env-cname \
            --timeout 20
          eb deploy
